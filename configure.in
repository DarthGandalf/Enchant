AC_INIT(src/enchant.h)

dnl Set release number
dnl This is derived from "Versioning" chapter of info libtool documentation.
PACKAGE=enchant
dnl     4a) Increment when removing or changing interfaces.
ENCHANT_MAJOR_VERSION=0
dnl     4a) 5) Increment when adding interfaces.
dnl     6) Set to zero when removing or changing interfaces.
ENCHANT_MINOR_VERSION=2
dnl     3) Increment when interfaces not changed at all,
dnl               only bug fixes or internal changes made.
dnl     4b) Set to zero when adding, removing or changing interfaces.
ENCHANT_MICRO_VERSION=0
dnl
dnl     Set this too
MAJOR_VERSION_PLUS_MINOR_VERSION=`expr $ENCHANT_MAJOR_VERSION + $ENCHANT_MINOR_VERSION`
dnl
VERSION=$ENCHANT_MAJOR_VERSION.$ENCHANT_MINOR_VERSION.$ENCHANT_MICRO_VERSION
dnl Version info for libraries = CURRENT:REVISION:AGE
VERSION_INFO=$MAJOR_VERSION_PLUS_MINOR_VERSION:$ENCHANT_MICRO_VERSION:$ENCHANT_MINOR_VERSION
AC_SUBST(VERSION_INFO)
AC_SUBST(ENCHANT_MAJOR_VERSION)
AC_SUBST(ENCHANT_MINOR_VERSION)
AC_SUBST(ENCHANT_MICRO_VERSION)

AM_INIT_AUTOMAKE($PACKAGE, $VERSION)
AM_MAINTAINER_MODE

dnl Checks for programs.
AC_ISC_POSIX
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_STDC_HEADERS
AC_LIBTOOL_WIN32_DLL
AM_PROG_LIBTOOL

AC_C_CONST

have_cxx=yes
AC_PROG_CXX(,have_cxx=no)
AM_CONDITIONAL(WITH_CXX, test "x$have_cxx" = "xyes")

AC_PATH_PROG(PKG_CONFIG, pkg-config, no)

PKG_CHECK_MODULES(ENCHANT, [glib-2.0 gmodule-2.0])

AC_SUBST(ENCHANT_CFLAGS)
AC_SUBST(ENCHANT_LIBS)

AC_MSG_CHECKING([for native Win32])
case "$host" in
  *-*-mingw*)
    native_win32=yes
    ;;
  *)
    native_win32=no
    ;;
esac
AC_MSG_RESULT([$native_win32])
AM_CONDITIONAL(OS_WIN32, test "x$native_win32" = "xyes")

build_ispell=yes

AC_ARG_ENABLE(ispell, [  --disable-ispell     enable the ispell backend [default=auto]], build_ispell="$enableval", build_ispell=yes)

if test "x$have_cxx" = "xno"; then
   build_ispell=no
fi
AM_CONDITIONAL(WITH_ISPELL, test "x$build_ispell" = "xyes")

ispell_dict_dir=${datadir}/enchant/ispell
AC_ARG_WITH(ispell-dir, [  --with-ispell-dir=PATH    path to installed ispell dicts ])

if test "x$with_ispell_dict_dir" != "x" ; then
   ispell_dict_dir=$with_ispell_dict_dir
fi

ISPELL_CFLAGS="-DENCHANT_ISPELL_DICT_DIR='\"$ispell_dict_dir\"'"
AC_SUBST(ISPELL_CFLAGS)

build_myspell=yes

AC_ARG_ENABLE(myspell, [  --disable-myspell     enable the myspell backend [default=auto]], build_myspell="$enableval", build_myspell=yes)

if test "x$have_cxx" = "xno"; then
   build_myspell=no
fi
AM_CONDITIONAL(WITH_MYSPELL, test "x$build_myspell" = "xyes")

myspell_dict_dir=${datadir}/enchant/myspell
AC_ARG_WITH(myspell-dir, [  --with-myspell-dir=PATH    path to installed myspell dicts ])

if test "x$with_myspell_dict_dir" != "x" ; then
   myspell_dict_dir=$with_myspell_dict_dir
fi

MYSPELL_CFLAGS="-DENCHANT_MYSPELL_DICT_DIR='\"$myspell_dict_dir\"'"
AC_SUBST(MYSPELL_CFLAGS)

check_pspell=yes

AC_ARG_ENABLE(pspell, [  --disable-pspell     enable the pspell backend [default=auto]], check_pspell="$enableval", check_pspell=yes)

build_pspell=no

if test "x$check_pspell" != "xno"; then
   AC_CHECK_LIB(pspell, pspell_manager_add_to_personal,
		[build_pspell=yes
		PSPELL_LIBS=-lpspell AC_SUBST(PSPELL_LIBS)])

   if test "$build_pspell" = "no"; then
	AC_CHECK_LIB(aspell, aspell_speller_add_to_personal,
	     	     [build_pspell=yes
	     	      PSPELL_LIBS=-laspell AC_SUBST(PSPELL_LIBS)])
   fi
fi

AM_CONDITIONAL(WITH_PSPELL, test "$build_pspell" = yes)

build_uspell=no

check_uspell=yes
AC_ARG_ENABLE(uspell, [  --disable-uspell     enable the uspell backend [default=auto]], check_uspell="$enableval", check_uspell=yes)

if test "x$have_cxx" = "xno"; then
   check_uspell=no
fi

if test "x$check_uspell" != "xno"; then
   PKG_CHECK_MODULES(USPELL, [libuspell >= 1.1.0], build_uspell=yes, build_uspell=no)
fi

uspell_dict_dir=${datadir}/enchant/uspell
AC_ARG_WITH(uspell-dir, [  --with-uspell-dir=PATH    path to installed uspell dicts ])

if test "x$with_uspell_dict_dir" != "x" ; then
   uspell_dict_dir=$with_uspell_dict_dir
fi

USPELL_CFLAGS="$USPELL_CFLAGS -DENCHANT_USPELL_DICT_DIR='\"$uspell_dict_dir\"'"
AC_SUBST(USPELL_CFLAGS)
AC_SUBST(USPELL_LIBS)

AM_CONDITIONAL(WITH_USPELL, test "$build_uspell" = yes)

AC_OUTPUT([
Makefile
enchant.pc
enchant.spec
src/Makefile
src/aspell/Makefile
src/ispell/Makefile
src/uspell/Makefile
src/myspell/Makefile
tests/Makefile
])

dnl =============================================================================================
echo "
$PACKAGE-$VERSION

	prefix:                         ${prefix}
	compiler:                       ${CC}
	
	Build Aspell/Pspell backend:    ${build_pspell}
	Build Ispell backend:           ${build_ispell}
	Build Uspell backend:           ${build_uspell}
	Build Myspell backend:          ${build_myspell}
"
